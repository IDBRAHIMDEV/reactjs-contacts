{"version":3,"sources":["components/context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/helpers/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/navbar/Navbar.js","components/pages/About.js","components/pages/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","concat","Object","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","phone","email","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactToggle","onDeleteClick","delete","t0","console","log","error","myMessage","_this2","_this$props$data","className","onClick","showContact","bind","style","cursor","Link","to","color","float","marginLeft","aria-hidden","Contacts","newListContacts","contacts_Contact","deleteContactFromChild","deleteContact","TextInputGroup","htmlFor","label","classnames","is-invalid","onChange","AddContact","errors","onChangeInput","e","defineProperty","target","submit","size","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","onSubmit","upContact","match","params","put","Navbar","title","href","defaultProps","About","PageNotFound","App","context_Provider","BrowserRouter","navbar_Navbar","Switch","Route","exact","path","component","EditContact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd536879.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_CONTACT': \r\n      return {\r\n        contacts: state.contacts.filter((contact) => contact.id !== action.payload)\r\n      };\r\n      case 'ADD_CONTACT': \r\n      return {\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n      case 'UPDATE_CONTACT': \r\n      return {\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? contact = action.payload : contact)\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        contacts: [\r\n          {id: 1, name: \"Mohamed IDBRAHIM\", phone: \"0650303315\", email: \"idbrahimdev@gmail.com\"},\r\n          {id: 2, name: \"Basma IDBRAHIM\", phone: \"0650303315\", email: \"basma@gmail.com\"},\r\n          {id: 3, name: \"Walid IDBRAHIM\", phone: \"0650303315\", email: \"walid@gmail.com\"}\r\n        ],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n      }\r\n\r\n    async componentDidMount() {\r\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n      \r\n      this.setState({\r\n        contacts: res.data\r\n       })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../context';\r\nimport './contact.css'\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n    showContactToggle: true\r\n  }\r\n\r\n  showContact(myMessage) {\r\n    console.log('salam: ', myMessage);\r\n    \r\n    this.setState({\r\n      showContactToggle: !this.state.showContactToggle\r\n    });\r\n  }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n\r\n  try {\r\n\r\n    const res = await axios.delete('https://jsonplaceholder.typicode.com/users/'+id)\r\n   \r\n    dispatch({\r\n      type: 'DELETE_CONTACT',\r\n      payload: id\r\n    })\r\n\r\n  }\r\n  catch(e) {\r\n    console.log(e.error)\r\n  }\r\n   \r\n\r\n   \r\n  }\r\n\r\n  render() {\r\n    const { id, name, phone, email } = this.props.data;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">\r\n                    { name } <i onClick={ this.showContact.bind(this, name) } \r\n                    className=\"fa fa-sort-down\" style={{ cursor: 'pointer' }}></i>\r\n                    \r\n\r\n                     <Link to={`/contact/edit/${id}`}>\r\n                        <i className=\"fa fa-pencil\" style={{\r\n                          color: 'orange',\r\n                          float: 'right',\r\n                          cursor: 'pointer',\r\n                          marginLeft: '8px'\r\n                        }}>\r\n                        </i>\r\n                     </Link>\r\n\r\n                    <i style={{color: 'red', float:'right', cursor: 'pointer'}} className=\"fa fa-times\" aria-hidden=\"true\"\r\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                    ></i>\r\n\r\n\r\n                  </h4>\r\n                  <div className=\"card-text\">\r\n                  {(this.state.showContactToggle) ? (\r\n                     <ul className=\"list-group\">\r\n                     <li className=\"list-group-item\">{ phone }</li>\r\n                     <li className=\"list-group-item\">{ email }</li>\r\n                   </ul>\r\n                  ) : null}\r\n                   \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              )\r\n          }\r\n        }\r\n      </Consumer>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\nContact.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\n\r\nimport { Consumer } from '../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    deleteContact(id) {\r\n       const { contacts } = this.state;\r\n\r\n       const newListContacts = contacts.filter((contact) => contact.id !== id)\r\n\r\n       this.setState({\r\n           contacts: newListContacts\r\n       })\r\n    }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => (\r\n           <div>\r\n              {value.contacts.map((contact) => (\r\n                  <Contact key={contact.id} data={contact} deleteContactFromChild={this.deleteContact.bind(this, contact.id)}/>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport classnames from 'classnames';\r\n\r\nexport default function TextInputGroup(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n        <input type={props.type} \r\n        className={classnames('form-control', {\r\n          'is-invalid': props.error\r\n        })}\r\n        name={props.name}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        />\r\n        <div className=\"invalid-feedback\">{props.error}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../context';\r\nimport TextInputGroup from '../helpers/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChangeInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    submit = async (dispatch, size, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n        \r\n        if(name == \"\") {\r\n            this.setState({errors: {name: \"the name is Required!\"}})\r\n            return;\r\n        }\r\n\r\n        if(email == \"\") {\r\n            this.setState({errors: {email: \"the email is Required!\"}})\r\n            return;\r\n        }\r\n\r\n        if(phone == \"\") {\r\n            this.setState({errors: {phone: \"the phone is Required!\"}})\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        try{\r\n              const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        \r\n            dispatch({\r\n                type: \"ADD_CONTACT\",\r\n                payload: res.data\r\n            })\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n      \r\n\r\n        \r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n  render() {\r\n      const { name, email, phone, errors } = this.state;\r\n    \r\n      return (\r\n          <Consumer>\r\n              {value => {\r\n                  const { dispatch } = value;\r\n                  return (\r\n                    <div>\r\n                      <form onSubmit={this.submit.bind(this, dispatch, value.contacts.length)}>    \r\n                      <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                              <h4 className=\"card-title\">Add contact</h4>\r\n                              <div className=\"card-text\">\r\n                                  <TextInputGroup \r\n                                        label=\"Name\" \r\n                                        type=\"text\"\r\n                                        name=\"name\" \r\n                                        value={name}\r\n                                        onChange={this.onChangeInput}\r\n                                        error={errors.name}\r\n                                  />\r\n                                   <TextInputGroup \r\n                                        label=\"Email\" \r\n                                        type=\"email\"\r\n                                        name=\"email\" \r\n                                        value={email}\r\n                                        onChange={this.onChangeInput}\r\n                                        error={errors.email}\r\n                                  />\r\n                                   <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        type=\"text\" \r\n                                        name=\"phone\" \r\n                                        value={phone}\r\n                                        onChange={this.onChangeInput}\r\n                                        error={errors.phone}\r\n                                  />\r\n                                  <button className=\"btn btn-success btn-block\">Add new Contact</button>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      </form>\r\n                    </div>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )\r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../context';\r\nimport TextInputGroup from '../helpers/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n\r\n       const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n       this.setState({\r\n           name: res.data.name,\r\n           email: res.data.email,\r\n           phone: res.data.phone\r\n       });\r\n    }\r\n\r\n    onChangeInput = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n    submit = async (dispatch, size, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n        \r\n        if(name == \"\") {\r\n            this.setState({errors: {name: \"the name is Required!\"}})\r\n            return;\r\n        }\r\n\r\n        if(email == \"\") {\r\n            this.setState({errors: {email: \"the email is Required!\"}})\r\n            return;\r\n        }\r\n\r\n        if(phone == \"\") {\r\n            this.setState({errors: {phone: \"the phone is Required!\"}})\r\n            return;\r\n        }\r\n\r\n        const upContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const id = this.props.match.params.id;\r\n\r\n        try{\r\n              const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, upContact)\r\n        \r\n            dispatch({\r\n                type: \"UPDATE_CONTACT\",\r\n                payload: res.data\r\n            })\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n      \r\n\r\n        \r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n  render() {\r\n      const { name, email, phone, errors } = this.state;\r\n    \r\n      return (\r\n          <Consumer>\r\n              {value => {\r\n                  const { dispatch } = value;\r\n                  return (\r\n                    <div>\r\n                      <form onSubmit={this.submit.bind(this, dispatch, value.contacts.length)}>    \r\n                      <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                              <h4 className=\"card-title\">Edit contact</h4>\r\n                              <div className=\"card-text\">\r\n                                  <TextInputGroup \r\n                                        label=\"Name\" \r\n                                        type=\"text\"\r\n                                        name=\"name\" \r\n                                        value={name}\r\n                                        onChange={this.onChangeInput}\r\n                                        error={errors.name}\r\n                                  />\r\n                                   <TextInputGroup \r\n                                        label=\"Email\" \r\n                                        type=\"email\"\r\n                                        name=\"email\" \r\n                                        value={email}\r\n                                        onChange={this.onChangeInput}\r\n                                        error={errors.email}\r\n                                  />\r\n                                   <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        type=\"text\" \r\n                                        name=\"phone\" \r\n                                        value={phone}\r\n                                        onChange={this.onChangeInput}\r\n                                        error={errors.phone}\r\n                                  />\r\n                                  <button className=\"btn btn-danger btn-block\">Update Contact</button>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      </form>\r\n                    </div>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )\r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './navbar.css'\r\n\r\nconst Navbar = (props) => {\r\n    const { title } = props;\r\n  return (\r\n   \r\n   <nav className=\"navbar navbar-expand-sm navbar-dark bg-success\">\r\n     <a className=\"navbar-brand\" href=\"#\">{ title }</a>\r\n       <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n         <li className=\"nav-item active\">\r\n           <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n         </li>  \r\n         <li className=\"nav-item active\">\r\n           <Link className=\"nav-link\" to=\"/contact/add\">Add</Link>\r\n         </li>  \r\n         <li className=\"nav-item active\">\r\n           <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n         </li>  \r\n       </ul>\r\n   </nav>\r\n  )\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"My title\"\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div>\r\n       <h2>About page</h2>\r\n       <h5>{ props.match.params.id }</h5>\r\n       <h5>{ props.match.params.name }</h5>\r\n       <p>\r\n           Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dolor, quia cumque? Vero, eaque. Inventore aspernatur dolore voluptatibus, saepe consectetur ipsam.\r\n       </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function PageNotFound() {\r\n  return (\r\n    <div>\r\n      <h2>Page not Found 404</h2>\r\n      <Link to=\"/\">Back to home page</Link>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport { Provider } from './components/context';\nimport Navbar from './components/navbar/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './components/pages/About';\nimport PageNotFound from './components/pages/PageNotFound';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n  \n\n\n    return (\n     <Provider>\n       <Router>\n        <div className=\"App\">\n          <Navbar title=\"Contacts list\"/>\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/contact/add\" component={AddContact} />\n            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n            <Route exact path=\"/about/:id/:name\" component={About} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n        </Router>\n    </Provider>\n     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}